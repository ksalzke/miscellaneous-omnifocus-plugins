/*{
	"type": "action",
	"targets": ["omnifocus"],
	"author": "Kaitlin Salzke",
	"identifier": "com.KaitlinSalzke.customComplete",
	"version": "1.0",
	"description": "To be used instead of regular 'complete'. Ideally will triggered by hook in the future.",
	"label": "Custom Complete",
	"shortLabel": "Custom Complete"
}*/
var _ = (function() {
	var action = new PlugIn.Action(function(selection, sender) {
		// CONFIG - array of additional functions to be run at end goes here
		additionalFunctions = PlugIn.find("com.KaitlinSalzke.config")
			.library("configLibrary")
			.customCompleteAdditionalFunctions();

		task = selection.tasks[0] || selection.projects[0].task;

		functionLibrary = PlugIn.find("com.KaitlinSalzke.functionLibrary").library(
			"functionLibrary"
		);

		task.markComplete();

		// run 'complete prerequisite' action to check task and ancestors
		PlugIn.find("com.KaitlinSalzke.DependencyForOmniFocus")
			.library("dependencyLibrary")
			.checkDependantsForTaskAndAncestors(task);

		// note details of follow-up if this is a follow up task (if 'delegation' plugin installed)
		delegationPlugin = PlugIn.find("com.KaitlinSalzke.Delegation");
		if (delegationPlugin !== null) {
			delegationPlugin.library("delegationLib").noteFollowUp(task);
		}

		// if no remaining tasks in project
		if (
			document.windows[0].perspective !== Perspective.BuiltIn.Projects &&
			task.containingProject !== null &&
			task.containingProject.status !== Project.Status.Done &&
			functionLibrary.isStalled(task.containingProject)
		) {
			alert = new Alert(
				"Project Stalled",
				"There are no further actions in this project. Do you want to review it now?"
			);
			alert.addOption("Yes");
			alert.addOption("No");
			alert.show(result => {
				if (result == 0) {
					urlStr = "omnifocus:///task/" + task.containingProject.id.primaryKey;
					URL.fromString(urlStr).call(() => {});
				}
			});
		}

		// run any other actions desired
		additionalFunctions.forEach(function(func) {
			func(task);
		});
	});

	action.validate = function(selection, sender) {
		return selection.tasks.length === 1 || selection.projects.length === 1;
	};

	return action;
})();
_;
